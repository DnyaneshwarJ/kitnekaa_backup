<style>
    .search-autocomplete-shopp
    {
        border: solid thin #FBDBB3;
        padding: 5px 5px 5px 5px;
        z-index: 100;
    }
    .search-autocomplete-shopp ul
    {

    }
    .search-autocomplete-shopp ul li
    {
        cursor: pointer;
        margin-bottom: 3px;
        padding: 2px 2px 2px 2px;
        background-color:#00942A;
        color: #fff;
    }
    .search-autocomplete-shopp ul li span
    {
        margin-right: 5px;
        color:#000000;
    }
</style>

<?php
/**
 * ISAAC Catalog Category Search
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    ISAAC
 * @package     ISAAC_CatalogCategorySearch
 * @copyright   Copyright (c) 2011 ISAAC Software Solutions B.V. (http://www.isaac.nl)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 * @author      Aad Mathijssen
 * @version     1.0.0
 */
$cat_list = $this->getCategories();
?>

<form id="search_mini_form1" action="<?php echo $this->helper('catalogsearch')->getResultUrl() ?>" method="get" name="search_mini_form1">
    <div class="form-search">
       <!-- <label for="search"><?php /*echo $this->__('Search:') */?></label>-->
        <?php $categorySearchHelper = $this->helper('catalogcategorysearch'); ?>
        <select id="category" name="<?php echo $categorySearchHelper->getCategoryParamName() ?>">
            <option value=""><?php echo $this->__('All Categories') ?></option>
            <?php foreach ( $cat_list as $cat):?>
                <option value="<?php echo $cat['value'];?>"><?php echo $cat['label']; ?></option>
            <?php endforeach;?>
        </select>
        <input id="search1" type="text" name="<?php echo $this->helper('catalogsearch')->getQueryParamName() ?>" class="input-text small-input-text" placeholder="Enter item name to search.."/>
        <button type="submit" title="<?php echo $this->__('Search') ?>" class="button"><span><span><?php echo $this->__('Search') ?></span></span></button>
        <button type="button" title="Add To List" class="button btn_add_shopp_pro"  style="display: none;float: right"><span><span>Add Selected</span></span>
        </button>
        <div id="search_autocomplete1" class="search-autocomplete-shopp" style="background-color: #fff"></div>
    </div>
    <input type="hidden" value="1" name="shopplist"/>
</form>

<script type="text/javascript">
    //<![CDATA[
    <?php if ($this->helper('catalogcategorysearch')->isCategoryPage() || $this->helper('catalogcategorysearch')->isSearchResultsPage()) : ?>
    Event.observe(window, 'load', function(){
        $$('select#category option').each(function(o) {
            if (o.value == '<?php echo $this->getCurrentlySelectedCategoryId() ?>') {
                o.selected = true;
                throw $break;
            }
        });
        escapedQueryText = '<?php echo $this->helper('catalogsearch')->getEscapedQueryText() ?>';
        if (escapedQueryText !== '') {
            $('search1').value = escapedQueryText;
        }
    });
    <?php endif; ?>

   Varien.searchForm.addMethods({
       initAutocomplete : function(url, destinationElement){

           new Ajax.Autocompleter(
               this.field,
               destinationElement,
               url,
               {
                   paramName: this.field.name,
                   method: 'get',
                   minChars: 2,
                   updateElement: this._selectAutocompleteItem.bind(this),
                   onShow : function(element, update) {
                       if(!update.style.position || update.style.position=='absolute') {
                           update.style.position = 'absolute';
                           Position.clone(element, update, {
                               setHeight: false,
                               offsetTop: element.offsetHeight
                           });
                       }
                       Effect.Appear(update,{duration:0});
                   }

               }
           );
       },
       _selectAutocompleteItem : function(element){
           if(element.title){
               this.field.value = element.title;
           }

           jQuery("#search_mini_form1").submit();
       }
    });

    var searchForm = new Varien.searchForm('search_mini_form1', 'search1', '<?php echo $this->__('Search entire store here...') ?>');
    searchForm.initAutocomplete('<?php echo $this->helper('catalogsearch')->getSuggestUrl() ?>', 'search_autocomplete1');

    //]]>


    jQuery(function(){

        jQuery("#search_mini_form1").submit(function(){
            var url=jQuery(this).attr('action');
            jQuery("#shopp_result").html('');
            jQuery("#loading").show();
            jQuery.ajax({
                url: url,
                type:'get',
                data: jQuery(this).serialize(),
                success: function (data) {
                    jQuery(".btn_add_shopp_pro").css('display', 'none');
                    jQuery("#shopp_result").html(data.listing);
                    //alert(data);
                    //var pro_count=jQuery("#shop-searched-pro-count").val();

                    jQuery("#loading").hide();

                    initAjax();

                    return false;
                }
            });

            return false;



        });
    });
</script>