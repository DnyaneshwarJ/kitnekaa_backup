<?php
$_tsHlp = Mage::helper('udtiership');
$_element = $this->getElement();
$this->setFieldName($_element->getName());
$fValue = $_element->getValue();
$cShipClass = Mage::getSingleton('udshipclass/source')->setPath('customer_ship_class')->toOptionHash();
$conditions = Mage::getSingleton('udtiership/source')->setPath('simple_condition')->toOptionHash();
$customerGroupIds = $_tsHlp->getCustomerGroups();
$useCustomerGroup = Mage::getStoreConfigFlag('carriers/udtiership/use_customer_group');
$_dt = $this->getDeliveryType();
$store = Mage::app()->getDefaultStoreView();
$condSubrowKey = $this->getFieldName()."[$_dt][\$\$ROW][condition]";
?>

<div class="grid" style="width:850px">
    <input type="hidden" name="<?php echo $this->getFieldName()?>[delivery_type]" type="text" value="<?php echo $_dt?>"/>
    <input id="<?php echo $this->getFieldName()?>" type="hidden" />
    <table cellspacing="0" class="data" id="<?php echo $this->suffixId('cfgTable')?>" style="width:850px">
        <col width="250" />
        <col width="500" />
        <col width="50" />
        <col width="50" />
        <thead>
        <tr class="headings">
            <th><?php echo Mage::helper('udropship')->__('Customer') ?></th>
            <th><?php echo Mage::helper('udropship')->__('Conditional Rates') ?></th>
            <th><?php echo Mage::helper('udropship')->__('Sort Order') ?></th>
            <th><?php echo Mage::helper('udropship')->__('Action') ?></th>
        </tr>
        <tr id="<?php echo $this->suffixId('rowTpl')?>" style="display:none">
            <td>
                <select multiple="multiple" name="<?php echo $this->getFieldName()?>[<?php echo $_dt?>][$$ROW][customer_shipclass_id][]" style="width:250px; height: 150px">
                    <option alt="customer_shipclass_id" value="*"><?php echo Mage::helper('udropship')->__('*** All ***')?></option>
                    <?php foreach ($cShipClass as $cscId=>$cscLabel): ?>
                        <option alt="customer_shipclass_id" value="<?php echo $cscId?>"><?php echo $this->htmlEscape($cscLabel)?></option>
                    <?php endforeach; ?>
                </select>
                <input type="hidden" name="<?php echo $this->getFieldName()?>[<?php echo $_dt?>][$$ROW][rate_id]" value="$$RATE_ID" />
                <?php if ($useCustomerGroup): ?>
                    <h4><?php echo Mage::helper('udropship')->__('Custmer Group')?></h4>
                    <select multiple="multiple" name="<?php echo $this->getFieldName()?>[$ROW][customer_group_id][]" style="width:150px; height: 150px">
                        <option alt="customer_group_id" value="*"><?php echo Mage::helper('udropship')->__('*** All ***')?></option>
                        <?php foreach ($customerGroupIds as $cscId=>$cscLabel): ?>
                            <option alt="customer_group_id" value="<?php echo $cscId?>"><?php echo $this->htmlEscape($cscLabel)?></option>
                        <?php endforeach; ?>
                    </select>
                <?php else: ?>
                    <input type="hidden" name="<?php echo $this->getFieldName()?>[$ROW][customer_group_id][]" value="*" />
                <?php endif ?>
            </td>
            <td>

                <label><?php echo Mage::helper('udropship')->__('Condition Name') ?></label>&nbsp;&nbsp;
                <select name="<?php echo $this->getFieldName()?>[<?php echo $_dt?>][$$ROW][condition_name]">
                    <option value=""><?php echo Mage::helper('udropship')->__('* Please select')?></option>
                    <?php foreach ($conditions as $_cKey=>$_cValue): ?>
                        <option alt="condition_name" value="<?php echo $_cKey?>"><?php echo $this->htmlEscape($_cValue)?></option>
                    <?php endforeach; ?>
                </select>
                <br /><br />

                <div class="condition-fieldset">
                    <?php
                    $fcBlock = $this->getSubrowsContainerBlock($condSubrowKey);
                    echo $fcBlock->toHtml();
                    ?>
                </div>

            </td>
            <td>
                <input type="text" class="input-text" name="<?php echo $this->getFieldName()?>[<?php echo $_dt?>][$$ROW][sort_order]" value="$$SORT_ORDER" style="width:50px" />
            </td>
            <td>
                <button type="button" class="scalable delete delete-fieldset"><span>&nbsp;</span></button>
            </td>
        </tr>
        </thead>
        <tfoot>
        <tr>
            <th colspan="4" class="a-left">
                <div class="left"><button type="button" class="scalable add" id="<?php echo $this->suffixId('addBtn')?>"><span>+ <?php echo Mage::helper('udropship')->__('Add Rate') ?></span></button></div>
            </th>
        </tr>
        </tfoot>
        <tbody class="fieldset_config_body">
        </tbody>
    </table>

</div>

<style type="text/css">
</style>

<script type="text/javascript">
    //<![CDATA[
    (function ()
    {
        var lastRowNum = 0;
        var tbody = $$('#<?php echo $this->suffixId('cfgTable')?> tbody.fieldset_config_body')[0]

        function addRow(inData)
        {
            var rowHtml = $('<?php echo $this->suffixId('rowTpl')?>').innerHTML
            var data = {
                rate_id: '0',
                customer_shipclass_id: '',
                customer_group_id: '',
                condition_name: '',
                sort_order: '0'
            }
            Object.extend(data, inData);
            data.row = ++lastRowNum;

            var isIE = (/msie [1-8]\./i).test(navigator.userAgent);
            var numericVars = ['sort_order','rate_id'];
            var forcedNumericVars = [];
            var keys = $H(data).keys().sortBy(function(s){return (''+s).length}).reverse();
            for (j=0; j<keys.length; j++) {
                var i=keys[j];
                value = data[i] || ''
                if (-1 != numericVars.indexOf(i) && data[i]
                    || -1 != forcedNumericVars.indexOf(i)
                    ) {
                    value *= 1;
                    data[i] = value;
                }
                if (i!=='row' && isIE) value = '"'+value+'"';
                rowHtml = rowHtml.replace(new RegExp('\\$\\$'+i.toUpperCase(), 'g'), value)
            }
            var regExTpl = [
                new Template('<option (([^>]*(alt="?#{key}"?|value="?#{value}"?(?=[\\s>]))){2})'),
                new Template('<option $1 selected="selected"'),
                new Template('<input (([^>]*(alt="?#{key}"?|value="?#{value}"?(?=[\\s>])|type="?checkbox"?)){3})'),
                new Template('<input $1 checked="checked"')
            ];
            var selectFields = $H({customer_shipclass_id:1,condition_name:0,customer_group_id:1});
            selectFields.each(function(pair){
                var varsForEval, value=data[pair.key], key=pair.key;
                for (var rxIdx=0; rxIdx<regExTpl.length; rxIdx+=2) {
                    varsForEval = [];
                    if (pair.value) {
                        if (!Object.isArray(value)) {
                            value = String.interpret(value).split(',');
                        }
                        value.each(function(val){
                            varsForEval.push({key: RegExp.escape(key), value: RegExp.escape(val)});
                        })
                    } else {
                        varsForEval.push({key: RegExp.escape(key), value: RegExp.escape(value)});
                    }
                    for (var vfeIdx=0; vfeIdx<varsForEval.length; vfeIdx++) {
                        var varForEval = varsForEval[vfeIdx];
                        var rxFind = regExTpl[rxIdx].evaluate(varForEval);
                        var rxReplace = regExTpl[rxIdx+1].evaluate(varForEval);
                        rowHtml = rowHtml.replace(new RegExp(rxFind, 'i'), rxReplace);
                    }
                }
            });
            tbody.insert('<tr>'+rowHtml+'</tr>')
            var trs = tbody.childElements()
            var tr = trs[trs.length-1]
            tr.addClassName(lastRowNum%2 ? 'odd' : 'even')
            var del = $(tr).select('button.delete-fieldset')[0];
            if (del) {
                $(del).observe('click', function(e) { e.stop(); $(del.parentNode.parentNode).remove() })
            }

            <?php $this->resetIdSuffix()->setFieldName($condSubrowKey);?>
            var __cfgTable, __suffixIdTpl, __rowTpl, __addBtn;
            __cfgTable = '<?php echo $this->suffixId('cfgTable')?>'.replace('$$ROW', data.row);
            __suffixIdTpl = '<?php echo $this->suffixId('#{key}') ?>'.replace('$$ROW', data.row);
            __rowTpl = '<?php echo $this->suffixId('rowTpl')?>'.replace('$$ROW', data.row);
            __addBtn = '<?php echo $this->suffixId('addBtn')?>'.replace('$$ROW', data.row);
            initSubrow(__cfgTable, __suffixIdTpl, __rowTpl, __addBtn);

            (function () {
                $A(['condition']).each(function(colKey){
                    if (Object.isArray(data[colKey]) && data[colKey].length>0) {
                        var colAddBtnId = tr.down('.'+colKey+'-fieldset button.add').id;
                        $A(data[colKey]).each(function(colRowData){
                            window[colAddBtnId+'udpAddRow'](colRowData);
                        });
                    }
                });
            }).defer();
        }

        <?php $this->resetIdSuffix()->setFieldName($_element->getName());?>
        $('<?php echo $this->suffixId('addBtn')?>').observe('click', function(e) { e.stop(); addRow() });

        function initSubrow(__cfgTable, __suffixIdTpl, __rowTpl, __addBtn)
        {
            var lastRowNum = 0;
            var tbody = $$('#'+__cfgTable+' tbody')[0]
            var suffixIdTpl = new Template(__suffixIdTpl)

            var udpAddRow = function (inData)
            {
                var rowHtml = $(__rowTpl).innerHTML
                var data = {
                    condition_to: '0',
                    price: '0',
                    sort_order: '0'
                }
                Object.extend(data, inData);
                data.row = ++lastRowNum;

                var isIE = (/msie [1-8]\./i).test(navigator.userAgent);
                var numericVars = ['sort_order', 'condition_to', 'price'];
                var forcedNumericVars = [];
                var keys = $H(data).keys().sortBy(function(s){return (''+s).length}).reverse();
                for (j=0; j<keys.length; j++) {
                    var i=keys[j];
                    value = data[i] || ''
                    if (-1 != numericVars.indexOf(i) && data[i]
                        || -1 != forcedNumericVars.indexOf(i)
                        ) {
                        value *= 1;
                        data[i] = value;
                    }
                    if (i!=='row' && isIE) value = '"'+value+'"';
                    rowHtml = rowHtml.replace(new RegExp('\\$'+i.toUpperCase(), 'g'), value)
                }
                var regExTpl = [
                    new Template('<option (([^>]*(alt="?#{key}"?|value="?#{value}"?(?=[\\s>]))){2})'),
                    new Template('<option $1 selected="selected"'),
                    new Template('<input (([^>]*(alt="?#{key}"?|value="?#{value}"?(?=[\\s>])|type="?checkbox"?)){3})'),
                    new Template('<input $1 checked="checked"')
                ];
                var selectFields = $H({});
                selectFields.each(function(pair){
                    var varsForEval, value=data[pair.key], key=pair.key;
                    for (var rxIdx=0; rxIdx<regExTpl.length; rxIdx+=2) {
                        varsForEval = [];
                        if (pair.value) {
                            if (!Object.isArray(value)) {
                                value = String.interpret(value).split(',');
                            }
                            value.each(function(val){
                                varsForEval.push({key: RegExp.escape(key), value: RegExp.escape(val)});
                            })
                        } else {
                            varsForEval.push({key: RegExp.escape(key), value: RegExp.escape(value)});
                        }
                        for (var vfeIdx=0; vfeIdx<varsForEval.length; vfeIdx++) {
                            var varForEval = varsForEval[vfeIdx];
                            var rxFind = regExTpl[rxIdx].evaluate(varForEval);
                            var rxReplace = regExTpl[rxIdx+1].evaluate(varForEval);
                            rowHtml = rowHtml.replace(new RegExp(rxFind, 'i'), rxReplace);
                        }
                    }
                });
                tbody.insert('<tr>'+rowHtml+'</tr>')
                var trs = tbody.childElements()
                var tr = trs[trs.length-1]
                tr.addClassName(lastRowNum%2 ? 'odd' : 'even')

                var toggleFields = [];
                toggleFields.each(function(key){
                    var yesKey = suffixIdTpl.evaluate({key: 'yes__'+key+'_'+data.row});
                    var noKey = suffixIdTpl.evaluate({key: 'no__'+key+'_'+data.row});
                    if (!data[key]) {
                        $$('.'+yesKey).invoke('hide');
                        $$('.'+noKey).invoke('show');
                    } else {
                        $$('.'+yesKey).invoke('show');
                        $$('.'+noKey).invoke('hide');
                    }
                });

                var del = $(tr).select('button.delete')[0];
                if (del) {
                    $(del).observe('click', function(e) { e.stop(); $(del.parentNode.parentNode).remove() })
                }
            }

            $(__addBtn).observe('click', function(e) { e.stop(); udpAddRow() });
            window[__addBtn+'udpAddRow'] = udpAddRow;

        }

        <?php if (is_array($fValue)): foreach ($fValue as $fV): ?>
        addRow(<?php echo Zend_Json::encode($fV) ?>);
        <?php endforeach; endif; ?>
    })();
    //]]>
</script>
